$util.qr($ctx.stash.paths.add("FormVersion_add_REQ.vtl"))
#set($identity=$ctx.stash.identity)
#set($args=$ctx.arguments.input)

#set($isAllowed = false)
#if($identity.isAdmin == true || ($identity.tenantId == $args.accountId && ($identity.isAccountAdmin == true || $identity.isAccountEditor == true)))
    #set($isAllowed = true)
#end

#if($isAllowed)
    #set($versionId = $util.autoId())
    #set($now = "${util.time.nowISO8601()}")
    $util.qr($ctx.stash.put("request", $args))
    $util.qr($ctx.stash.request.put("id", $versionId))
    $util.qr($ctx.stash.request.put("itemType", 'FormVersion'))
    $util.qr($ctx.stash.put("operation", 'put'))
    {
        "version": "2018-05-29",
        "statements": [
            "INSERT INTO FormVersion(id, formId, ownerId, notes, formData, createdAt) VALUES(:id, :formId, :ownerId, :notes, :formData, :createdAt)",
            "SELECT * FROM FormVersion WHERE id='${versionId}'"
        ],
        "variableMap": {
            ":id": "${versionId}",
            ":accountId" : "${args.accountId}",
            ":formId": "${args.formId}",
            ":ownerId": "${identity.callerId}",
            ":notes": "${args.notes}",
            ":formData": "${args.formData}",
            ":createdAt": "${now}"
        }
    }
#else
    $util.error("User [${identity.callerId}] cannot execute [PUT] on [FormVersion]", "Unauthorized")
#end