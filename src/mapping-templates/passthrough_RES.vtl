$util.qr($ctx.stash.put("tenant", $context.identity.claims.get("custom:tenantId")))
#foreach($group in $context.identity.claims.get("cognito:groups"))
    $util.qr($ctx.stash.put("group", $group))
    #if($group == "Admin")
        #set($isAdmin = true)
        $util.qr($ctx.stash.put("isAdmin", true))
    #end
    #if($group == "AccountAdmin")
        #set($isAccountAdmin = true)
        $util.qr($ctx.stash.put("isAccountAdmin", true))
    #end
#end

#if($ctx.result.owner == $context.identity.sub)
    #set($isRecordOwner = true)
#end
#if($isAdmin == true || $ctx.result.type == "PLANTYPE" || $ctx.result.type == "INTEGRATIONTYPE")
    #set($isAllowed = true)
#elseif (($ctx.result.accountId == $ctx.stash.tenant) && $isAccountAdmin == true)
    #set($isAllowed = true)
#else
    #set($isAllowed = $isRecordOwner == true)
#end

$util.qr($ctx.stash.put("recordType", $ctx.result.type))
$util.qr($ctx.stash.put("isRecordOwner", $isRecordOwner))
$util.qr($ctx.stash.put("authResult", $isAllowed))

## Raise a GraphQL field error in case of a datasource invocation error
#if($ctx.error)
    $util.error($ctx.error.message, $ctx.error.type)
#end

## Pass back the result from DynamoDB
#if ($isAllowed == true)
    $util.toJson($ctx.result)
#else
    $utils.unauthorized()
#end