{
  "service": {
    "service": "forms-li",
    "serviceObject": {
      "name": "forms-li"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "region": "ap-southeast-2",
      "functions": {
        "postconfirmation": "forms-li-postconfirmation",
        "invite": "forms-li-invite"
      },
      "profile": "default",
      "environment": {
        "protocol": "http://",
        "domain": "dev-app.forms.li",
        "urlPrefix": "http://dev-app.forms.li",
        "region": "ap-southeast-2",
        "environment": "dev",
        "serviceName": "formsli"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:BatchWriteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-southeast-2:*:table/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "ses:SendEmail",
            "ses:SendRawEmail"
          ],
          "Resource": "arn:aws:ses:us-east-1:*:*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:BatchWriteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-southeast-2:*:table/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "cognito-idp:AdminAddUserToGroup",
            "cognito-idp:AdminUpdateUserAttributes",
            "cognito-idp:AdminRemoveUserFromGroup",
            "cognito-idp:AdminGetUser",
            "cognito-idp:AdminCreateUser"
          ],
          "Resource": {
            "Fn::Sub": "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*"
          }
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "PostConfirmationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/forms-li-postconfirmation"
            }
          },
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/forms-li-invite"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "forms-li",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/forms-li-dev*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/forms-li-postconfirmation:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/forms-li-invite:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/forms-li-dev*:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/forms-li-postconfirmation:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/forms-li-invite:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "forms-li",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PostConfirmationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/forms-li/dev/1563944486794-2019-07-24T05:01:26.794Z/forms-li.zip"
              },
              "FunctionName": "forms-li-postconfirmation",
              "Handler": "src/postconfirmation.handle",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "protocol": "http://",
                  "domain": "dev-app.forms.li",
                  "urlPrefix": "http://dev-app.forms.li",
                  "region": "ap-southeast-2",
                  "environment": "dev",
                  "serviceName": "formsli"
                }
              }
            },
            "DependsOn": [
              "PostConfirmationLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PostConfirmationLambdaVersionWIzmPgWzWJVgmlo5Nxyq71lb71HwSwpg4cHftTPc0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostConfirmationLambdaFunction"
              },
              "CodeSha256": "/tJ/sqNrbDpMQld7rS+KiUlLzyHAylp5oyAe48DSAyU="
            }
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/forms-li/dev/1563944486794-2019-07-24T05:01:26.794Z/forms-li.zip"
              },
              "FunctionName": "forms-li-invite",
              "Handler": "src/invite.handle",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "protocol": "http://",
                  "domain": "dev-app.forms.li",
                  "urlPrefix": "http://dev-app.forms.li",
                  "region": "ap-southeast-2",
                  "environment": "dev",
                  "serviceName": "formsli"
                }
              }
            },
            "DependsOn": [
              "SignupLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SignupLambdaVersion9I4gDodyQ5gzaxoGmkZiPSxNIHOUF3hjAkP60ViFMt0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "/tJ/sqNrbDpMQld7rS+KiUlLzyHAylp5oyAe48DSAyU="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-forms-li",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourcePostconfirm": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "postconfirm",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceInvite": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "invite",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostconfirmOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostconfirm"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodInviteOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceInvite"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostconfirmPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostconfirm"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostConfirmationLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodInvitePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceInvite"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "MyApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1563944448322": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPostconfirmOptions",
              "ApiGatewayMethodInviteOptions",
              "ApiGatewayMethodPostconfirmPost",
              "ApiGatewayMethodInvitePost"
            ]
          },
          "PostConfirmationLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostConfirmationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SignupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CognitoUserPoolMyUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "dev-forms-li",
              "LambdaConfig": {
                "PostConfirmation": {
                  "Fn::GetAtt": [
                    "PostConfirmationLambdaFunction",
                    "Arn"
                  ]
                }
              },
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ],
              "EmailVerificationSubject": "Your Forms.li verification code",
              "EmailVerificationMessage": "{####}",
              "EmailConfiguration": {
                "SourceArn": {
                  "Fn::Sub": "arn:aws:ses:us-east-1:${AWS::AccountId}:identity/no-reply@forms.li"
                }
              },
              "Schema": [
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "tenantId",
                  "Required": false
                },
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "tenantName",
                  "Required": false
                },
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "source",
                  "Required": false
                },
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "group",
                  "Required": false
                },
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "environment",
                  "Required": false
                },
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "stack",
                  "Required": false
                },
                {
                  "AttributeDataType": "String",
                  "DeveloperOnlyAttribute": false,
                  "Mutable": true,
                  "Name": "region",
                  "Required": false
                }
              ]
            },
            "DependsOn": [
              "PostConfirmationLambdaFunction"
            ]
          },
          "PostConfirmationLambdaPermissionCognitoUserPoolMyUserPoolTriggerSourcePostConfirmation": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostConfirmationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolMyUserPool",
                  "Arn"
                ]
              }
            }
          },
          "AttachmentsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "formsli-userpoolclient",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              },
              "ExplicitAuthFlows": [
                "USER_PASSWORD_AUTH"
              ],
              "GenerateSecret": false,
              "ReadAttributes": [
                "email",
                "given_name",
                "family_name",
                "website",
                "email_verified",
                "email",
                "profile",
                "phone_number",
                "phone_number_verified",
                "custom:tenantId",
                "custom:tenantName",
                "custom:source",
                "custom:environment",
                "custom:stack",
                "custom:region",
                "custom:group"
              ],
              "WriteAttributes": [
                "email",
                "given_name",
                "family_name",
                "phone_number",
                "address",
                "website",
                "profile",
                "locale",
                "custom:group",
                "custom:tenantName",
                "custom:source"
              ]
            }
          },
          "CognitoUserPoolAdminClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "formsli-userpooladminclient",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              },
              "ExplicitAuthFlows": [
                "ADMIN_NO_SRP_AUTH"
              ],
              "GenerateSecret": false,
              "ReadAttributes": [
                "email",
                "given_name",
                "family_name",
                "website",
                "email_verified",
                "email",
                "profile",
                "phone_number",
                "phone_number_verified",
                "custom:tenantId",
                "custom:tenantName",
                "custom:source",
                "custom:group",
                "custom:environment",
                "custom:stack",
                "custom:region"
              ],
              "WriteAttributes": [
                "custom:tenantId",
                "custom:tenantName",
                "custom:source",
                "custom:environment",
                "custom:stack",
                "custom:region",
                "custom:group"
              ]
            }
          },
          "CognitoAppAdminGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "Description": "Application Admin",
              "GroupName": "Admin",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              }
            }
          },
          "CognitoAccountAdminGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "Description": "Account admin",
              "GroupName": "AccountAdmin",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              }
            }
          },
          "CognitoAccountEditorGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "Description": "Account editor user",
              "GroupName": "Editor",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              }
            }
          },
          "CognitoAccountViewerGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "Description": "Account read only user",
              "GroupName": "Viewer",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              }
            }
          },
          "CognitoUserPoolAdminUser": {
            "Type": "AWS::Cognito::UserPoolUser",
            "Properties": {
              "Username": "infrastructure.dev@forms.li",
              "UserPoolId": {
                "Ref": "CognitoUserPoolMyUserPool"
              },
              "DesiredDeliveryMediums": [
                "EMAIL"
              ],
              "UserAttributes": [
                {
                  "Name": "email",
                  "Value": "infrastructure.dev@forms.li"
                },
                {
                  "Name": "given_name",
                  "Value": "dev Infrastructure"
                },
                {
                  "Name": "family_name",
                  "Value": "Admin"
                },
                {
                  "Name": "email_verified",
                  "Value": true
                },
                {
                  "Name": "custom:group",
                  "Value": "Admin"
                },
                {
                  "Name": "custom:region",
                  "Value": "ap-southeast-2"
                },
                {
                  "Name": "custom:environment",
                  "Value": "dev"
                }
              ]
            }
          },
          "CognitoIdentityPoolMyIdentityPool": {
            "Type": "AWS::Cognito::IdentityPool",
            "Properties": {
              "IdentityPoolName": "formsgraphqlidentitypool",
              "AllowUnauthenticatedIdentities": false,
              "CognitoIdentityProviders": [
                {
                  "ClientId": {
                    "Ref": "CognitoUserPoolClient"
                  },
                  "ProviderName": {
                    "Fn::GetAtt": [
                      "CognitoUserPoolMyUserPool",
                      "ProviderName"
                    ]
                  }
                }
              ]
            }
          },
          "CognitoIdentityPoolRoles": {
            "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
            "Properties": {
              "IdentityPoolId": {
                "Ref": "CognitoIdentityPoolMyIdentityPool"
              },
              "Roles": {
                "authenticated": {
                  "Fn::GetAtt": [
                    "CognitoAuthRole",
                    "Arn"
                  ]
                },
                "unauthenticated": {
                  "Fn::GetAtt": [
                    "CognitoUnAuthorizedRole",
                    "Arn"
                  ]
                }
              }
            }
          },
          "CognitoUnAuthorizedRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": "cognito-identity.amazonaws.com"
                    },
                    "Action": [
                      "sts:AssumeRoleWithWebIdentity"
                    ],
                    "Condition": {
                      "StringEquals": {
                        "cognito-identity.amazonaws.com:aud": {
                          "Ref": "CognitoIdentityPoolMyIdentityPool"
                        }
                      },
                      "ForAnyValue:StringLike": {
                        "cognito-identity.amazonaws.com:amr": "unauthenticated"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "CognitoUnauthorizedPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "mobileanalytics:PutEvents",
                          "cognito-sync:*"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CognitoAuthRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": "cognito-identity.amazonaws.com"
                    },
                    "Action": [
                      "sts:AssumeRoleWithWebIdentity"
                    ],
                    "Condition": {
                      "StringEquals": {
                        "cognito-identity.amazonaws.com:aud": {
                          "Ref": "CognitoIdentityPoolMyIdentityPool"
                        }
                      },
                      "ForAnyValue:StringLike": {
                        "cognito-identity.amazonaws.com:amr": "authenticated"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "formsli-authorized",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "mobileanalytics:PutEvents",
                          "cognito-sync:*",
                          "cognito-identity:*"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::GetAtt": [
                                    "AttachmentsBucket",
                                    "Arn"
                                  ]
                                },
                                "/private/",
                                "$",
                                "{cognito-identity.amazonaws.com:sub}/*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "MyApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 10,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "MyCognitoAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:cognito-idp:",
                      {
                        "Fn::Sub": "${AWS::Region}"
                      },
                      ":",
                      {
                        "Fn::Sub": "${AWS::AccountId}"
                      },
                      ":userpool/",
                      {
                        "Ref": "CognitoUserPoolMyUserPool"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "PostConfirmationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostConfirmationLambdaVersionWIzmPgWzWJVgmlo5Nxyq71lb71HwSwpg4cHftTPc0"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersion9I4gDodyQ5gzaxoGmkZiPSxNIHOUF3hjAkP60ViFMt0"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "AttachmentsBucketName": {
            "Value": {
              "Ref": "AttachmentsBucket"
            }
          },
          "UserPoolId": {
            "Value": {
              "Ref": "CognitoUserPoolMyUserPool"
            }
          },
          "UserPoolClientId": {
            "Value": {
              "Ref": "CognitoUserPoolClient"
            }
          },
          "AdminUserPoolClientId": {
            "Value": {
              "Ref": "CognitoUserPoolAdminClient"
            }
          },
          "UserPoolAdminUser": {
            "Value": {
              "Ref": "CognitoUserPoolAdminUser"
            }
          },
          "IdentityPoolId": {
            "Value": {
              "Ref": "CognitoIdentityPoolMyIdentityPool"
            }
          },
          "AuthorizerId": {
            "Value": {
              "Ref": "MyApiGatewayAuthorizer"
            }
          },
          "UserPoolIdCognitoUserPoolMyUserPool": {
            "Value": {
              "Ref": "CognitoUserPoolMyUserPool"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "output": {
        "file": "outputs/stack.json"
      },
      "packagePath": "./package.json",
      "webpack": {
        "webpackConfig": "webpack.config.js",
        "packager": "npm",
        "includeModules": {
          "forceInclude": [
            "source-map-support"
          ]
        }
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-pseudo-parameters",
      "aws-cognito-idp-userpool-domain",
      "serverless-iam-roles-per-function",
      "@anttiviljami/serverless-stack-output",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "postConfirmation": {
        "name": "forms-li-postconfirmation",
        "handler": "src/postconfirmation.handle",
        "events": [
          {
            "http": {
              "path": "postconfirm",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "cognitoUserPool": {
              "pool": "MyUserPool",
              "trigger": "PostConfirmation"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/forms-li.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "signup": {
        "name": "forms-li-invite",
        "handler": "src/invite.handle",
        "events": [
          {
            "http": {
              "path": "invite",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "authorizerId": {
                  "Ref": "MyApiGatewayAuthorizer"
                },
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [
                  "email",
                  "username",
                  "custom:tenantId",
                  "custom:group"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/forms-li.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "AttachmentsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "CognitoUserPoolMyUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "dev-forms-li",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ],
            "EmailVerificationSubject": "Your Forms.li verification code",
            "EmailVerificationMessage": "{####}",
            "EmailConfiguration": {
              "SourceArn": "arn:aws:ses:us-east-1:#{AWS::AccountId}:identity/no-reply@forms.li"
            },
            "Schema": [
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "tenantId",
                "Required": false
              },
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "tenantName",
                "Required": false
              },
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "source",
                "Required": false
              },
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "group",
                "Required": false
              },
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "environment",
                "Required": false
              },
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "stack",
                "Required": false
              },
              {
                "AttributeDataType": "String",
                "DeveloperOnlyAttribute": false,
                "Mutable": true,
                "Name": "region",
                "Required": false
              }
            ]
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "formsli-userpoolclient",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            },
            "ExplicitAuthFlows": [
              "USER_PASSWORD_AUTH"
            ],
            "GenerateSecret": false,
            "ReadAttributes": [
              "email",
              "given_name",
              "family_name",
              "website",
              "email_verified",
              "email",
              "profile",
              "phone_number",
              "phone_number_verified",
              "custom:tenantId",
              "custom:tenantName",
              "custom:source",
              "custom:environment",
              "custom:stack",
              "custom:region",
              "custom:group"
            ],
            "WriteAttributes": [
              "email",
              "given_name",
              "family_name",
              "phone_number",
              "address",
              "website",
              "profile",
              "locale",
              "custom:group",
              "custom:tenantName",
              "custom:source"
            ]
          }
        },
        "CognitoUserPoolAdminClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "formsli-userpooladminclient",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            },
            "ExplicitAuthFlows": [
              "ADMIN_NO_SRP_AUTH"
            ],
            "GenerateSecret": false,
            "ReadAttributes": [
              "email",
              "given_name",
              "family_name",
              "website",
              "email_verified",
              "email",
              "profile",
              "phone_number",
              "phone_number_verified",
              "custom:tenantId",
              "custom:tenantName",
              "custom:source",
              "custom:group",
              "custom:environment",
              "custom:stack",
              "custom:region"
            ],
            "WriteAttributes": [
              "custom:tenantId",
              "custom:tenantName",
              "custom:source",
              "custom:environment",
              "custom:stack",
              "custom:region",
              "custom:group"
            ]
          }
        },
        "CognitoAppAdminGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "Description": "Application Admin",
            "GroupName": "Admin",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            }
          }
        },
        "CognitoAccountAdminGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "Description": "Account admin",
            "GroupName": "AccountAdmin",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            }
          }
        },
        "CognitoAccountEditorGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "Description": "Account editor user",
            "GroupName": "Editor",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            }
          }
        },
        "CognitoAccountViewerGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "Description": "Account read only user",
            "GroupName": "Viewer",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            }
          }
        },
        "CognitoUserPoolAdminUser": {
          "Type": "AWS::Cognito::UserPoolUser",
          "Properties": {
            "Username": "infrastructure.dev@forms.li",
            "UserPoolId": {
              "Ref": "CognitoUserPoolMyUserPool"
            },
            "DesiredDeliveryMediums": [
              "EMAIL"
            ],
            "UserAttributes": [
              {
                "Name": "email",
                "Value": "infrastructure.dev@forms.li"
              },
              {
                "Name": "given_name",
                "Value": "dev Infrastructure"
              },
              {
                "Name": "family_name",
                "Value": "Admin"
              },
              {
                "Name": "email_verified",
                "Value": true
              },
              {
                "Name": "custom:group",
                "Value": "Admin"
              },
              {
                "Name": "custom:region",
                "Value": "ap-southeast-2"
              },
              {
                "Name": "custom:environment",
                "Value": "dev"
              }
            ]
          }
        },
        "CognitoIdentityPoolMyIdentityPool": {
          "Type": "AWS::Cognito::IdentityPool",
          "Properties": {
            "IdentityPoolName": "formsgraphqlidentitypool",
            "AllowUnauthenticatedIdentities": false,
            "CognitoIdentityProviders": [
              {
                "ClientId": {
                  "Ref": "CognitoUserPoolClient"
                },
                "ProviderName": {
                  "Fn::GetAtt": [
                    "CognitoUserPoolMyUserPool",
                    "ProviderName"
                  ]
                }
              }
            ]
          }
        },
        "CognitoIdentityPoolRoles": {
          "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
          "Properties": {
            "IdentityPoolId": {
              "Ref": "CognitoIdentityPoolMyIdentityPool"
            },
            "Roles": {
              "authenticated": {
                "Fn::GetAtt": [
                  "CognitoAuthRole",
                  "Arn"
                ]
              },
              "unauthenticated": {
                "Fn::GetAtt": [
                  "CognitoUnAuthorizedRole",
                  "Arn"
                ]
              }
            }
          }
        },
        "CognitoUnAuthorizedRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "cognito-identity.amazonaws.com"
                  },
                  "Action": [
                    "sts:AssumeRoleWithWebIdentity"
                  ],
                  "Condition": {
                    "StringEquals": {
                      "cognito-identity.amazonaws.com:aud": {
                        "Ref": "CognitoIdentityPoolMyIdentityPool"
                      }
                    },
                    "ForAnyValue:StringLike": {
                      "cognito-identity.amazonaws.com:amr": "unauthenticated"
                    }
                  }
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "CognitoUnauthorizedPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "mobileanalytics:PutEvents",
                        "cognito-sync:*"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        },
        "CognitoAuthRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "cognito-identity.amazonaws.com"
                  },
                  "Action": [
                    "sts:AssumeRoleWithWebIdentity"
                  ],
                  "Condition": {
                    "StringEquals": {
                      "cognito-identity.amazonaws.com:aud": {
                        "Ref": "CognitoIdentityPoolMyIdentityPool"
                      }
                    },
                    "ForAnyValue:StringLike": {
                      "cognito-identity.amazonaws.com:amr": "authenticated"
                    }
                  }
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "formsli-authorized",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "mobileanalytics:PutEvents",
                        "cognito-sync:*",
                        "cognito-identity:*"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*"
                      ],
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::GetAtt": [
                                  "AttachmentsBucket",
                                  "Arn"
                                ]
                              },
                              "/private/",
                              "$",
                              "{cognito-identity.amazonaws.com:sub}/*"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "MyApiGatewayAuthorizer": {
          "Type": "AWS::ApiGateway::Authorizer",
          "Properties": {
            "AuthorizerResultTtlInSeconds": 10,
            "IdentitySource": "method.request.header.Authorization",
            "Name": "MyCognitoAuthorizer",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Type": "COGNITO_USER_POOLS",
            "ProviderARNs": [
              {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:cognito-idp:",
                    "#{AWS::Region}",
                    ":",
                    "#{AWS::AccountId}",
                    ":userpool/",
                    {
                      "Ref": "CognitoUserPoolMyUserPool"
                    }
                  ]
                ]
              }
            ]
          }
        }
      },
      "Outputs": {
        "AttachmentsBucketName": {
          "Value": {
            "Ref": "AttachmentsBucket"
          }
        },
        "UserPoolId": {
          "Value": {
            "Ref": "CognitoUserPoolMyUserPool"
          }
        },
        "UserPoolClientId": {
          "Value": {
            "Ref": "CognitoUserPoolClient"
          }
        },
        "AdminUserPoolClientId": {
          "Value": {
            "Ref": "CognitoUserPoolAdminClient"
          }
        },
        "UserPoolAdminUser": {
          "Value": {
            "Ref": "CognitoUserPoolAdminUser"
          }
        },
        "IdentityPoolId": {
          "Value": {
            "Ref": "CognitoIdentityPoolMyIdentityPool"
          }
        },
        "AuthorizerId": {
          "Value": {
            "Ref": "MyApiGatewayAuthorizer"
          }
        }
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/forms-li/dev/1563944486794-2019-07-24T05:01:26.794Z",
    "artifact": ""
  }
}