Resources:
  SftpUserRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - transfer.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: SftpBucketAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  Fn::Join:
                    - ":"
                    - 
                      - "arn"
                      - Ref: 'AWS::Partition'
                      - "s3::"
                      - ${self:provider.environment.s3_user_bucket}*
  TransferIdentityProviderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - transfer.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: TransferCanInvokeAuthorizeApi
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:Invoke
                Resource:
                  Fn::Join:
                    - ":"
                    - - "arn"
                      - Ref: 'AWS::Partition'
                      - execute-api
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - Fn::Join:
                          - ""
                          -
                            - Ref: ApiGatewayRestApi
                            - /${self:provider.stage}/GET/*
        - PolicyName: TransferCanReadAuthorizeApi
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - apigateway:GET
                Resource: "*"
  TransferLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - transfer.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSTransferLoggingAccess
  SftpServer:
    DependsOn:
      - TransferIdentityProviderRole
      - TransferLoggingRole
      - ApiGatewayRestApi
      - SftpUserRole
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: "PUBLIC"
      IdentityProviderType: "API_GATEWAY"
      LoggingRole: 
        'Fn::GetAtt': [ "TransferLoggingRole", "Arn" ]
      IdentityProviderDetails: 
        InvocationRole: 
          'Fn::GetAtt': [ "TransferIdentityProviderRole", "Arn" ]
        Url: 
          Fn::Join:
          - ""
          - - https://
            - Ref: ApiGatewayRestApi
            - ".execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}/"
  SftpDomain:
    DependsOn:
      - SftpServer
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneId: ${self:provider.environment.hostedZoneId}
      Name: ${self:provider.stage}-${self:provider.environment.sftpDomain}
      Type: 'CNAME'
      TTL : 300
      ResourceRecords:
          - Fn::Join:
            - ""
            - - 'Fn::GetAtt': ["SftpServer", "ServerId"]
              - ".server.transfer.#{AWS::Region}.amazonaws.com"